{
  "openapi": "3.0.0",
  "info": {
    "title": "OpenFiles API",
    "description": "AI-native file storage platform with S3-style operations, version control, and semantic search.",
    "version": "2.0.0",
    "contact": {
      "name": "OpenFiles Support",
      "url": "https://openfiles.com"
    }
  },
  "servers": [
    {
      "url": "https://api.openfiles.ai/functions/v1/api",
      "description": "Production"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "tags": [
          "System"
        ],
        "operationId": "healthCheck",
        "security": [],
        "responses": {
          "200": {
            "description": "Service healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/project": {
      "get": {
        "summary": "Get project info",
        "tags": [
          "Project"
        ],
        "operationId": "getProject",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/project/apikey/regenerate": {
      "post": {
        "summary": "Regenerate API key",
        "tags": [
          "Project"
        ],
        "operationId": "regenerateApiKey",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/files": {
      "get": {
        "summary": "List files in a directory",
        "description": "List files in a specific directory. When called on the root directory ('/'), this only returns files in the root directory and excludes files in subdirectories. To see all files across all directories, use `?recursive=true` parameter.",
        "tags": [
          "Files"
        ],
        "operationId": "listFiles",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "directory",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "/"
            },
            "description": "Directory to list files from"
          },
          {
            "name": "recursive",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "If true, lists all files across all directories. If false (default), only lists files in the specified directory."
          },
          {
            "name": "contentType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "minSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "maxSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "path",
                "created_at",
                "updated_at",
                "size"
              ],
              "default": "path"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileListResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Write file",
        "tags": [
          "Files"
        ],
        "operationId": "writeFile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WriteFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOperationResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      }
    },
    "/files/{path}": {
      "get": {
        "summary": "Read file or get metadata",
        "tags": [
          "Files"
        ],
        "operationId": "readFile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                ""
              ]
            }
          },
          {
            "name": "versions",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                ""
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/FileContentResponse"
                    },
                    {
                      "$ref": "#/components/schemas/FileMetadataResponse"
                    },
                    {
                      "$ref": "#/components/schemas/FileVersionsResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/files/edit/{path}": {
      "put": {
        "summary": "Edit file with string replacement",
        "tags": [
          "Files"
        ],
        "operationId": "editFile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File path (S3-style, no leading slash)",
            "example": "src/app.py"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOperationResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/files/append/{path}": {
      "put": {
        "summary": "Append content to file",
        "tags": [
          "Files"
        ],
        "operationId": "appendFile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File path (S3-style, no leading slash)",
            "example": "logs/app.log"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppendFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOperationResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/files/overwrite/{path}": {
      "put": {
        "summary": "Overwrite file content completely",
        "tags": [
          "Files"
        ],
        "operationId": "overwriteFile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File path (S3-style, no leading slash)",
            "example": "config/settings.json"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverwriteFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileOperationResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "WriteFileRequest": {
        "type": "object",
        "required": [
          "path",
          "content"
        ],
        "properties": {
          "path": {
            "type": "string",
            "minLength": 1,
            "example": "src/app.py"
          },
          "content": {
            "type": "string",
            "maxLength": 10485760,
            "example": "print('Hello World')"
          },
          "contentType": {
            "type": "string",
            "enum": [
              "text/markdown",
              "text/plain",
              "text/javascript",
              "text/typescript",
              "application/json",
              "text/html",
              "text/css",
              "text/x-python",
              "text/x-java-source",
              "text/x-c++src",
              "text/x-csrc",
              "application/xml",
              "application/yaml",
              "text/csv",
              "image/jpeg",
              "image/png",
              "image/gif",
              "image/webp",
              "image/bmp",
              "image/svg+xml",
              "application/pdf",
              "application/zip",
              "audio/mpeg",
              "video/mp4",
              "video/x-msvideo",
              "video/quicktime",
              "application/octet-stream"
            ],
            "example": "text/x-python",
            "description": "MIME type of the file content. Must be one of the supported types."
          },
          "isBase64": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "EditFileRequest": {
        "type": "object",
        "required": [
          "oldString",
          "newString"
        ],
        "properties": {
          "oldString": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100000
          },
          "newString": {
            "type": "string",
            "maxLength": 100000
          }
        }
      },
      "AppendFileRequest": {
        "type": "object",
        "required": [
          "content"
        ],
        "properties": {
          "content": {
            "type": "string",
            "minLength": 1,
            "maxLength": 10485760
          }
        }
      },
      "OverwriteFileRequest": {
        "type": "object",
        "required": [
          "content"
        ],
        "properties": {
          "content": {
            "type": "string",
            "maxLength": 10485760
          },
          "isBase64": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "FileMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "path": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "mimeType": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "minimum": 0
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProjectResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "userId": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      },
      "ApiKeyResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string"
              }
            }
          }
        }
      },
      "FileOperationResponse": {
        "type": "object",
        "required": [
          "success",
          "data",
          "operation",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/FileMetadata"
          },
          "operation": {
            "type": "string",
            "example": "write_file"
          },
          "message": {
            "type": "string",
            "example": "File created successfully, version 1"
          }
        }
      },
      "FileContentResponse": {
        "type": "object",
        "required": [
          "success",
          "data",
          "operation",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "path": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "version": {
                "type": "integer"
              },
              "mimeType": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "operation": {
            "type": "string",
            "example": "read_file"
          },
          "message": {
            "type": "string",
            "example": "File read successfully"
          }
        }
      },
      "FileMetadataResponse": {
        "type": "object",
        "required": [
          "success",
          "data",
          "operation",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/FileMetadata"
          },
          "operation": {
            "type": "string",
            "example": "get_file_metadata"
          },
          "message": {
            "type": "string",
            "example": "File metadata retrieved successfully"
          }
        }
      },
      "FileVersionsResponse": {
        "type": "object",
        "required": [
          "success",
          "data",
          "operation",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "file": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "mimeType": {
                    "type": "string"
                  }
                }
              },
              "versions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "integer"
                    },
                    "size": {
                      "type": "integer"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              },
              "total": {
                "type": "integer",
                "minimum": 0
              },
              "limit": {
                "type": "integer",
                "minimum": 1
              },
              "offset": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "operation": {
            "type": "string",
            "example": "get_file_versions"
          },
          "message": {
            "type": "string",
            "example": "File versions retrieved successfully"
          }
        }
      },
      "FileListResponse": {
        "type": "object",
        "required": [
          "success",
          "data",
          "operation",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "files": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FileMetadata"
                }
              },
              "total": {
                "type": "integer",
                "minimum": 0
              },
              "limit": {
                "type": "integer",
                "minimum": 1
              },
              "offset": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "operation": {
            "type": "string",
            "example": "list_files"
          },
          "message": {
            "type": "string",
            "example": "Files listed successfully"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "success",
          "error"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          },
          "operation": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "message",
          "version"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok"
            ]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Invalid request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Conflict": {
        "description": "Resource conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Business rule violation",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "System",
      "description": "System operations"
    },
    {
      "name": "Project",
      "description": "Project management"
    },
    {
      "name": "Files",
      "description": "File operations"
    }
  ]
}